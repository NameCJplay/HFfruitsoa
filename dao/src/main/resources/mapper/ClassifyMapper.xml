<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hf.dao.Dao.ClassifyDao">

      <resultMap id="ClassifyDOMap" type="com.hf.domain.Domain.Classify.ClassifyDO"></resultMap>
	
	<select id="getChildren" resultType="com.hf.domain.Domain.Classify.ClassifyDO"  resultMap="ClassifyDOMap">
		select `classify_id`,`classify_parentid`,`classify_name` from hf_classify
		<where>
				<if test="parentid != null and parentid >=0">
					and  classify_parentid = #{parentid}
				</if>
		</where>
	</select>

	<select id="get" resultType="com.hf.domain.Domain.Classify.ClassifyDO"  resultMap="ClassifyDOMap">
		select `classify_id`,`classify_parentid`,`classify_name` from hf_classify where classify_id = #{value}
	</select>

	<select id="list" resultType="com.hf.domain.Domain.Classify.ClassifyDO" resultMap="ClassifyDOMap">
		select `classify_id`,`classify_parentid`,`classify_name` from hf_classify
        <where>  
		  		  <if test="classifyId != null"> and  classify_id = #{classifyId}  </if>
		  		  <if test="classifyParentid != null"> and  classify_parentid = #{classifyParentid}  </if>
		  		  <if test="classifyName != null and classifyName != ''"> and  classify_name like  CONCAT('%',#{classifyName},'%')   </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by classify_id
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from hf_classify
		 <where>  
		  		  <if test="classifyId != null"> and  classify_id = #{classifyId}  </if>
		  		  <if test="classifyParentid != null"> and  classify_parentid = #{classifyParentid}  </if>
		  		  <if test="classifyName != null and classifyName != ''"> and  classify_name like  CONCAT('%',#{classifyName},'%')   </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.hf.domain.Domain.Classify.ClassifyDO" useGeneratedKeys="true" keyProperty="classifyId">
		insert into hf_classify
		(
			`classify_parentid`, 
			`classify_name`
		)
		values
		(
			#{classifyParentid}, 
			#{classifyName}
		)
	</insert>
	 
	<update id="update" parameterType="com.hf.domain.Domain.Classify.ClassifyDO">
		update hf_classify 
		<set>
		<if test="classifyParentid != null">	`classify_parentid` = #{classifyParentid},  </if>
		<if test="classifyName != null">	`classify_name` = #{classifyName} </if>
		</set>
		where classify_id = #{classifyId}
	</update>
	
	<delete id="remove">
		delete from hf_classify where classify_id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from hf_classify where classify_id in 
		<foreach item="classifyId" collection="array" open="(" separator="," close=")">
			#{classifyId}
		</foreach>
	</delete>

</mapper>